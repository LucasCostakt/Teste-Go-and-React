{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documentos/go-todo/client/src/To-Do-List.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Header, Form, Input, Icon } from \"semantic-ui-react\";\nlet endpoint = \"http://localhost:8080\";\n\nclass ToDoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      let {\n        task\n      } = this.state; // console.log(\"pRINTING task\", this.state.task);\n\n      if (task) {\n        axios.post(endpoint + \"/api/task\", {\n          task\n        }, {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          }\n        }).then(res => {\n          this.getTask();\n          this.setState({\n            task: \"\"\n          });\n          console.log(res);\n        });\n      }\n    };\n\n    this.getTask = () => {\n      axios.get(endpoint + \"/api/task\").then(res => {\n        console.log(res);\n\n        if (res.data) {\n          this.setState({\n            items: res.data.map(item => {\n              let color = \"yellow\";\n\n              if (item.status) {\n                color = \"green\";\n              }\n\n              return React.createElement(Card, {\n                key: item._id,\n                color: color,\n                fluid: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 65\n                },\n                __self: this\n              }, React.createElement(Card.Content, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66\n                },\n                __self: this\n              }, React.createElement(Card.Header, {\n                textAlign: \"left\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                style: {\n                  wordWrap: \"break-word\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 68\n                },\n                __self: this\n              }, item.task)), React.createElement(Card.Meta, {\n                textAlign: \"right\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 71\n                },\n                __self: this\n              }, React.createElement(Icon, {\n                name: \"check circle\",\n                color: \"green\",\n                onClick: () => this.updateTask(item._id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 72\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                style: {\n                  paddingRight: 10\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }, \"Done\"), React.createElement(Icon, {\n                name: \"undo\",\n                color: \"yellow\",\n                onClick: () => this.undoTask(item._id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                style: {\n                  paddingRight: 10\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83\n                },\n                __self: this\n              }, \"Undo\"), React.createElement(Icon, {\n                name: \"delete\",\n                color: \"red\",\n                onClick: () => this.deleteTask(item._id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                style: {\n                  paddingRight: 10\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 89\n                },\n                __self: this\n              }, \"Delete\"))));\n            })\n          });\n        } else {\n          this.setState({\n            items: []\n          });\n        }\n      });\n    };\n\n    this.updateTask = id => {\n      axios.put(endpoint + \"/api/task/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.undoTask = id => {\n      axios.put(endpoint + \"/api/undoTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.deleteTask = id => {\n      axios.delete(endpoint + \"/api/deleteTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.state = {\n      task: \"\",\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTask();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Header, {\n      className: \"header\",\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"TO DO LIST\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"task\",\n      onChange: this.onChange,\n      value: this.state.task,\n      fluid: true,\n      placeholder: \"Create Task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.items)));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/home/dev/Documentos/go-todo/client/src/To-Do-List.js"],"names":["React","Component","axios","Card","Header","Form","Input","Icon","endpoint","ToDoList","constructor","props","onChange","event","setState","target","name","value","onSubmit","task","state","post","headers","then","res","getTask","console","log","get","data","items","map","item","color","status","_id","wordWrap","updateTask","paddingRight","undoTask","deleteTask","id","put","delete","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Header, Form, Input, Icon } from \"semantic-ui-react\";\n\nlet endpoint = \"http://localhost:8080\";\n\nclass ToDoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      task: \"\",\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTask();\n  }\n\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onSubmit = () => {\n    let { task } = this.state;\n    // console.log(\"pRINTING task\", this.state.task);\n    if (task) {\n      axios\n        .post(\n          endpoint + \"/api/task\",\n          {\n            task\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n          }\n        )\n        .then(res => {\n          this.getTask();\n          this.setState({\n            task: \"\"\n          });\n          console.log(res);\n        });\n    }\n  };\n\n  getTask = () => {\n    axios.get(endpoint + \"/api/task\").then(res => {\n      console.log(res);\n      if (res.data) {\n        this.setState({\n          items: res.data.map(item => {\n            let color = \"yellow\";\n\n            if (item.status) {\n              color = \"green\";\n            }\n            return (\n              <Card key={item._id} color={color} fluid>\n                <Card.Content>\n                  <Card.Header textAlign=\"left\">\n                    <div style={{ wordWrap: \"break-word\" }}>{item.task}</div>\n                  </Card.Header>\n\n                  <Card.Meta textAlign=\"right\">\n                    <Icon\n                      name=\"check circle\"\n                      color=\"green\"\n                      onClick={() => this.updateTask(item._id)}\n                    />\n                    <span style={{ paddingRight: 10 }}>Done</span>\n                    <Icon\n                      name=\"undo\"\n                      color=\"yellow\"\n                      onClick={() => this.undoTask(item._id)}\n                    />\n                    <span style={{ paddingRight: 10 }}>Undo</span>\n                    <Icon\n                      name=\"delete\"\n                      color=\"red\"\n                      onClick={() => this.deleteTask(item._id)}\n                    />\n                    <span style={{ paddingRight: 10 }}>Delete</span>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            );\n          })\n        });\n      } else {\n        this.setState({\n          items: []\n        });\n      }\n    });\n  };\n\n  updateTask = id => {\n    axios\n      .put(endpoint + \"/api/task/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      })\n      .then(res => {\n        console.log(res);\n        this.getTask();\n      });\n  };\n\n  undoTask = id => {\n    axios\n      .put(endpoint + \"/api/undoTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      })\n      .then(res => {\n        console.log(res);\n        this.getTask();\n      });\n  };\n\n  deleteTask = id => {\n    axios\n      .delete(endpoint + \"/api/deleteTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      })\n      .then(res => {\n        console.log(res);\n        this.getTask();\n      });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <Header className=\"header\" as=\"h2\">\n            TO DO LIST\n          </Header>\n        </div>\n        <div className=\"row\">\n          <Form onSubmit={this.onSubmit}>\n            <Input\n              type=\"text\"\n              name=\"task\"\n              onChange={this.onChange}\n              value={this.state.task}\n              fluid\n              placeholder=\"Create Task\"\n            />\n            {/* <Button >Create Task</Button> */}\n          </Form>\n        </div>\n        <div className=\"row\">\n          <Card.Group>{this.state.items}</Card.Group>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}